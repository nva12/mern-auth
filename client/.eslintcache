[{"/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/index.js":"1","/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/App.js":"2","/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/components/Layout.js":"3","/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/screens/HomeScreen.js":"4","/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/screens/SignUpScreen.js":"5","/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/screens/SignInScreen.js":"6","/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/screens/AccountActivationScreen.js":"7","/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/components/Header.js":"8"},{"size":197,"mtime":1609139265002,"results":"9","hashOfConfig":"10"},{"size":820,"mtime":1609305931749,"results":"11","hashOfConfig":"10"},{"size":401,"mtime":1609308894540,"results":"12","hashOfConfig":"10"},{"size":156,"mtime":1609141132467,"results":"13","hashOfConfig":"10"},{"size":2385,"mtime":1609306293833,"results":"14","hashOfConfig":"10"},{"size":2173,"mtime":1609306301175,"results":"15","hashOfConfig":"10"},{"size":1552,"mtime":1609306352162,"results":"16","hashOfConfig":"10"},{"size":549,"mtime":1609308866172,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1sn5e2o",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/index.js",[],["38","39"],"/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/App.js",[],"/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/components/Layout.js",[],"/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/screens/HomeScreen.js",[],"/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/screens/SignUpScreen.js",["40","41"],"import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst SignUpScreen = () => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    buttonText: 'Submit',\n  });\n\n  const { name, email, password, buttonText } = values;\n\n  const handleChange = (name) => (event) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, buttonText: 'Submitting...' });\n    axios({\n      method: 'POST',\n      url: `${process.env.REACT_APP_API}/users/signup`,\n      data: { name, email, password },\n    })\n      .then((response) => {\n        console.log('Successfully signed up user', response);\n        setValues({\n          ...values,\n          name: '',\n          email: '',\n          password: '',\n          buttonText: 'Submitted',\n        });\n        toast.success(response.data.message);\n      })\n      .catch((error) => {\n        console.log('Error signing up user', error.response.data.error);\n        setValues({\n          ...values,\n          buttonText: 'Submit',\n        });\n        toast.error(error.response.data.error);\n      });\n  };\n\n  return (\n    <section>\n      <ToastContainer />\n      <form onSubmit={handleSubmit}>\n        <header>\n          <h2>Sign Up</h2>\n        </header>\n        <label for='name'>Name:</label>\n        <input\n          type='text'\n          id='name'\n          name='name'\n          value={name}\n          placeholder='Name'\n          onChange={handleChange('name')}\n        />\n        <label for='email'>Email:</label>\n        <input\n          type='email'\n          id='email'\n          name='email'\n          value={email}\n          placeholder='Email'\n          onChange={handleChange('email')}\n        />\n        <label for='password'>Password:</label>\n        <input\n          type='password'\n          id='password'\n          name='password'\n          value={password}\n          placeholder='Password'\n          onChange={handleChange('password')}\n        />\n        <button type='submit' disabled={buttonText !== 'Submit'}>\n          {buttonText}\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default SignUpScreen;\n","/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/screens/SignInScreen.js",["42","43"],"import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst SignInScreen = () => {\n  const [values, setValues] = useState({\n    email: '',\n    password: '',\n    buttonText: 'Submit',\n  });\n\n  const { email, password, buttonText } = values;\n\n  const handleChange = (name) => (event) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, buttonText: 'Submitting...' });\n    axios({\n      method: 'POST',\n      url: `${process.env.REACT_APP_API}/users/signin`,\n      data: { email, password },\n    })\n      .then((response) => {\n        console.log('Successfully signed in user', response);\n\n        setValues({\n          ...values,\n          email: '',\n          password: '',\n          buttonText: 'Submitted',\n        });\n        toast.success(\n          `Hello ${response.data.user.name}, you are now signed in!`\n        );\n      })\n      .catch((error) => {\n        console.log('Error signing in user', error.response.data.error);\n        setValues({\n          ...values,\n          buttonText: 'Submit',\n        });\n        toast.error(error.response.data.error);\n      });\n  };\n\n  return (\n    <section>\n      <ToastContainer />\n      <form onSubmit={handleSubmit}>\n        <header>\n          <h2>Sign In</h2>\n        </header>\n        <label for='email'>Email:</label>\n        <input\n          type='email'\n          id='email'\n          name='email'\n          value={email}\n          placeholder='Email'\n          onChange={handleChange('email')}\n        />\n        <label for='password'>Password:</label>\n        <input\n          type='password'\n          id='password'\n          name='password'\n          value={password}\n          placeholder='Password'\n          onChange={handleChange('password')}\n        />\n        <button type='submit' disabled={buttonText !== 'Submit'}>\n          {buttonText}\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default SignInScreen;\n","/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/screens/AccountActivationScreen.js",["44","45"],"import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst AccountActivationScreen = ({ match }) => {\n  const [values, setValues] = useState({\n    name: '',\n    token: '',\n    show: true,\n  });\n\n  const { name, token, show } = values;\n\n  useEffect(() => {\n    let token = match.params.token;\n    let { name } = jwt.decode(token);\n\n    if (token) {\n      setValues({ ...values, name, token });\n    }\n  }, [match, values]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    axios({\n      method: 'POST',\n      url: `${process.env.REACT_APP_API}/users/account-activation`,\n      data: { token },\n    })\n      .then((response) => {\n        console.log('Successfully activated user account', response);\n        setValues({\n          ...values,\n          show: false,\n        });\n        toast.success(response.data.message);\n      })\n      .catch((error) => {\n        console.log('Error activating user account', error.response.data.error);\n        toast.error(error.response.data.error);\n      });\n  };\n\n  return (\n    <section>\n      <ToastContainer />\n      <header>\n        <h2>Account Activation</h2>\n        <h3>Welcome {name}</h3>\n        <button onClick={handleSubmit} disabled={!show}>\n          Activate Account\n        </button>\n      </header>\n    </section>\n  );\n};\n\nexport default AccountActivationScreen;\n","/Users/nicolas/Documents/Code/MERN/mern-auth/client/src/components/Header.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":14},{"ruleId":"50","severity":1,"message":"54","line":2,"column":16,"nodeType":"52","messageId":"53","endLine":2,"endColumn":24},{"ruleId":"50","severity":1,"message":"51","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":14},{"ruleId":"50","severity":1,"message":"54","line":2,"column":16,"nodeType":"52","messageId":"53","endLine":2,"endColumn":24},{"ruleId":"50","severity":1,"message":"51","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":14},{"ruleId":"50","severity":1,"message":"54","line":2,"column":16,"nodeType":"52","messageId":"53","endLine":2,"endColumn":24},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]